name: Production Deployment

on:
  release:
    types: [published]

jobs:
  deploy:
    name: 'Deploy bundle resources'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: databricks/setup-cli@main

      - name: Deploy bundle resources
        run: databricks bundle deploy
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod

  start_cluster:
    name: 'Start cluster if needed'
    runs-on: ubuntu-latest
    
    needs:
      - deploy
    
    steps:
      - uses: actions/checkout@v4
      - uses: databricks/setup-cli@main
      
      - name: List and start cluster
        run: |
          echo "Listing all clusters..."
          databricks clusters list
          echo "Attempting to start cluster..."
          databricks clusters start --cluster-name "hello-world-cluster" || echo "Cluster start failed, continuing..."
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod
      
      - name: Wait for cluster to be ready
        run: |
          echo "Waiting for cluster to be fully ready..."
          sleep 120
          echo "Cluster should be ready now"
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod

  update_app:
    name: 'Start app and deploy app code'
    runs-on: ubuntu-latest

    needs:
      - start_cluster

    steps:
      - uses: actions/checkout@v4
      - uses: databricks/setup-cli@main

      - name: Start app
        run: databricks bundle run hello-world-app
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod 