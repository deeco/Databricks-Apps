name: Production Deployment

on:
  release:
    types: [published]

jobs:
  deploy:
    name: 'Deploy app resource'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: databricks/setup-cli@main

      - name: Deploy bundle resources
        run: databricks bundle deploy
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod

  start_cluster:
    name: 'Start cluster and wait for readiness'
    runs-on: ubuntu-latest
    
    needs:
      - deploy
    
    steps:
      - uses: actions/checkout@v4
      - uses: databricks/setup-cli@main
      
      - name: Get cluster ID and start cluster
        run: |
          echo "Getting cluster ID..."
          CLUSTER_ID=$(databricks clusters list --output json | jq -r '.clusters[] | select(.cluster_name == "hello-world-cluster") | .cluster_id')
          echo "Cluster ID: $CLUSTER_ID"
          echo "Starting cluster..."
          databricks clusters start $CLUSTER_ID
          echo "Cluster start command completed"
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod
      
      - name: Wait for cluster to be ready
        run: |
          echo "Waiting for cluster to be fully ready..."
          sleep 90
          echo "Checking cluster status..."
          CLUSTER_ID=$(databricks clusters list --output json | jq -r '.clusters[] | select(.cluster_name == "hello-world-cluster") | .cluster_id')
          databricks clusters get --cluster-id $CLUSTER_ID
          echo "Cluster should be ready now"
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod

  update_app:
    name: 'Start app and deploy app code'
    runs-on: ubuntu-latest

    needs:
      - start_cluster

    steps:
      - uses: actions/checkout@v4
      - uses: databricks/setup-cli@main

      - name: Start app
        run: databricks bundle run hello-world-app
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
          DATABRICKS_BUNDLE_ENV: prod 